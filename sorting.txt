Sorting:
		Arranging array elements in incresing or decreasing order is called sorting.
		
	1. Selection sort:
		
		Algo:
		(i).	Start from the first element.
		(ii).	Find the smallest element in the unsorted part of the array.
		(iii).	Swap it with the first element of the unsorted part.
		(iv).	Move the boundary of the sorted part by one.
		(v).	Repeat until the entire array is sorted.
		
		- Complexity:
			- Best case: O( n^2 );
			- Avg case: O( n^2 );
			- Worst case: O( n^2 );
	 
	
	
	2 Bubble Sort:
		Algo:
		(i).	Start from the first element.
		(ii).	Compare each pair of adjacent elements.
		(iii).	If the left element is greater, swap them.
		(iv).	Repeat the process for all elements.
		(v).	After each pass, the largest element bubbles to the end.
		(vi).	Continue for n-1 passes or until no swaps are needed.
		
		- Time complexity:
			Best case: O( n );
			Worst case: O( n^2 );
			Avg case: O( n^2 );
			
		
	3. Insertion sort:
		Insertion Sort is a simple comparison-based sorting algorithm.
		It build the final sorted array one elment at a time, just like how you sort cards
		in your hand.
		
		Algo:
		(i).	Start from the second element(index 1).
		(ii).	Compare it with the elements before it.
		(iii).	Shift the larger elements one position to the right.
		(iv).	Insert the current element at its correct position.		
		
		Complexity:
			1. Best case: O( n );
			2. Avg case:  O( n^2 );
			3. Worst case: O( n^2 );		
		
	
	4. Merge Sort:
		Merge Sort is a devide and conquer algorithm that:
			- Devides the input array into two halves
			- recursively sorts them
			- merges the sorted halves to produce the final sorted array.
			
		Algo:
			(i).	Divide the array into two halves until each subarray has 1 element.
			(ii).	Conquer by recursively sorting the subarrays.
			(iii).	Combine by merging two sorted arrays into one.
			
		Time Complexity:
			Best:	O( n log n);
			Avg:	O( n log n);
			Worst	O( n log n);
			
		Space complexity:
			O(n) in every case: